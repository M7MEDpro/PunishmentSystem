plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id 'com.gradleup.shadow' version '9.0.0-beta15'

}

group = 'dev.m7med'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.8-R0.1-SNAPSHOT")
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.mongodb:mongodb-driver-sync:4.10.1'
    implementation 'dev.velix:imperat-core:1.9.7'
    implementation 'dev.velix:imperat-bukkit:1.9.7'
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    archiveClassifier.set('')
    archiveVersion.set('1.0')

    relocate("dev.velix", "dev.m7med.punishmentsystem.libs.dev.velix")
    relocate("org.xerial", "dev.m7med.punishmentsystem.lib.sqlite")
    relocate("com.mysql", "dev.m7med.punishmentsystem.lib.mysql")
    relocate("com.mongodb", "dev.m7med.punishmentsystem.lib.mongodb")
    exclude 'META-INF/native-image/**'
    exclude 'META-INF/services/java.sql.Driver'

    minimize()

    destinationDirectory.set(file("D:/programing/Plugins dev/Server paper/plugins"))
}
